$font-family-sans-serif: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
  'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', 'WenQuanYi Micro Hei',
  Arial, sans-serif !default;
$font-family-monospace: Menlo, Monaco, Consolas, 'Liberation Mono', 'Simsun',
  'Courier New', monospace !default;

$primary-color: #4AB154;
$secondary-color: #bc0000;

@mixin text-ellipsis($line: 1) {
  text-overflow: ellipsis;
  overflow: hidden;
  @if $line == 1 {
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
  }
}
@mixin placeholder-color($color: $text-light) {
  ::placeholder {
    color: $color;
    opacity: 1;
  }
  :-ms-input-placeholder {
    color: $color;
  }
  ::-ms-input-placeholder {
    color: $color;
  }
}
@mixin triangle($direction, $width, $height, $color) {
  @if not
    index(
      'up' 'up-right' 'right' 'down-right' 'down' 'down-left' 'left' 'up-left',
      $direction
    )
  {
    @error "Direction must be `up`, `up-right`, `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.";
  } @else if not _is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in the `triangle` mixin.";
  } @else {
    border-style: solid;
    height: 0;
    width: 0;
    @if $direction == 'up' {
      border-color: transparent transparent $color;
      border-width: 0 ($width / 2) $height;
    } @else if $direction == 'up-right' {
      border-color: transparent $color transparent transparent;
      border-width: 0 $width $width 0;
    } @else if $direction == 'right' {
      border-color: transparent transparent transparent $color;
      border-width: ($height / 2) 0 ($height / 2) $width;
    } @else if $direction == 'down-right' {
      border-color: transparent transparent $color;
      border-width: 0 0 $width $width;
    } @else if $direction == 'down' {
      border-color: $color transparent transparent;
      border-width: $height ($width / 2) 0;
    } @else if $direction == 'down-left' {
      border-color: transparent transparent transparent $color;
      border-width: $width 0 0 $width;
    } @else if $direction == 'left' {
      border-color: transparent $color transparent transparent;
      border-width: ($height / 2) $width ($height / 2) 0;
    } @else if $direction == 'up-left' {
      border-color: $color transparent transparent;
      border-width: $width $width 0 0;
    }
  }
}
@mixin clearfix() {
  &::after {
    display: block;
    content: '';
    clear: both;
  }
}
@mixin sm {
  @media (max-width: 767px) {
    @content;
  }
}
@mixin md {
  @media (min-width: 768px) and (max-width: 1023px) {
    @content;
  }
}
@mixin lg {
  @media (min-width: 1024px) {
    @content;
  }
}

@mixin setTopLine($color: $border-color) {
  content: ' ';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  height: 1px;
  border-top: 1px solid $color;
  transform-origin: 0 0;
  transform: scaleY(0.5);
}

@mixin setBottomLine($color: $border-color) {
  content: ' ';
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  height: 1px;
  border-bottom: 1px solid $color;
  transform-origin: 0 100%;
  transform: scaleY(0.5);
}

@mixin setLeftLine($color: $border-color) {
  content: ' ';
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  bottom: 0;
  border-left: 1px solid $color;
  transform-origin: 0 0;
  transform: scaleX(0.5);
}

@mixin setRightLine($color: $border-color) {
  content: ' ';
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  bottom: 0;
  border-right: 1px solid $color;
  transform-origin: 100% 0;
  transform: scaleX(0.5);
}
